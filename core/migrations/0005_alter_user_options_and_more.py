# Generated by Django 5.1.7 on 2025-05-17 07:31

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("core", "0004_user_type_and_email"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="user",
            options={"verbose_name": "用户", "verbose_name_plural": "用户"},
        ),
        migrations.RemoveConstraint(
            model_name="user",
            name="valid_user_type_constraint",
        ),
        migrations.AddField(
            model_name="user",
            name="login_count",
            field=models.PositiveIntegerField(default=0, help_text="用户登录次数"),
        ),
        migrations.AlterField(
            model_name="user",
            name="avatar_url",
            field=models.URLField(
                blank=True, default="", help_text="用户头像 URL", max_length=500
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="google_id",
            field=models.CharField(
                blank=True,
                help_text="Google 用户 ID",
                max_length=255,
                null=True,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="last_login",
            field=models.DateTimeField(blank=True, help_text="最后登录时间", null=True),
        ),
        migrations.AlterField(
            model_name="user",
            name="name",
            field=models.CharField(
                blank=True, default="", help_text="用户显示名称", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="user_type",
            field=models.CharField(
                choices=[("google", "Google User"), ("admin", "Admin User")],
                default="google",
                help_text="用户类型：google 或 admin",
                max_length=10,
            ),
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("google_id__isnull", False), ("user_type", "google")),
                    models.Q(("google_id__isnull", True), ("user_type", "admin")),
                    _connector="OR",
                ),
                name="valid_user_type_constraint",
            ),
        ),
    ]
